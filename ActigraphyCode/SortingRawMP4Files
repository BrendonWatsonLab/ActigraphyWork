# This script sorts raw .mp4 files located on Turbo. This parses through each AO animal and organizes the .mp4 files by lighting condition (as well as animal)
import os
import shutil
from datetime import datetime

# The parent directory containing the unsorted animal folders (AO9, AO10, etc.)
SOURCE_DIR = '/nfs/turbo/umms-brendonw/JeremyData/GrassRatActigraphyOnlyData/Cohort3'

# A new directory where the sorted videos will be placed.
# The script will create this folder and the necessary subfolders.
SORTED_VIDEOS_DIR = '/nfs/turbo/umms-brendonw/JeremyData/GrassRatActigraphyOnlyData/Cohort3Sorted'

# Define the animals to process
ANIMALS = ['AO9', 'AO10', 'AO11', 'AO12']

# Define condition date ranges from your PI's notes.
# The format is (start_datetime, end_datetime, condition_name)
# NOTE: The end time is "exclusive" (up to, but not including, 6am on the end date)
CONDITIONS = [
    (datetime(2025, 3, 31, 6, 0, 0), datetime(2025, 4, 30, 6, 0, 0), '300Lux'),
    (datetime(2025, 4, 30, 6, 0, 0), datetime(2025, 5, 28, 6, 0, 0), '1000Lux'),
    (datetime(2025, 5, 28, 6, 0, 0), datetime(2025, 6, 27, 6, 0, 0), 'FullDark'),
    (datetime(2025, 6, 27, 6, 0, 0), datetime(2025, 7, 7, 6, 0, 0), '300LuxEnd') # Changed name to avoid confusion
]

# --- SCRIPT LOGIC ---
print("--- Starting Video Sorting Script ---")

if not os.path.isdir(SOURCE_DIR):
    print(f"ERROR: Source directory not found at: {SOURCE_DIR}")
    exit()

os.makedirs(SORTED_VIDEOS_DIR, exist_ok=True)
print(f"Sorted videos will be placed in: {SORTED_VIDEOS_DIR}")

for animal in ANIMALS:
    animal_source_path = os.path.join(SOURCE_DIR, animal)
    if not os.path.isdir(animal_source_path):
        print(f"Warning: Folder for {animal} not found. Skipping.")
        continue

    print(f"\nProcessing files for animal: {animal}...")
    
    for filename in os.listdir(animal_source_path):
        if not filename.endswith('.mp4'):
            continue

        try:
            # Parse filename like "AO9_20250331_05-06-13.361.mp4"
            parts = filename.split('_')
            date_str = parts[1]
            time_str = parts[2].split('.')[0].replace('-', ':') # '05-06-13' -> '05:06:13'
            
            file_datetime = datetime.strptime(f"{date_str} {time_str}", '%Y%m%d %H:%M:%S')

            # Determine the correct condition for this file
            file_condition = None
            for start_date, end_date, cond_name in CONDITIONS:
                if start_date <= file_datetime < end_date:
                    file_condition = cond_name
                    break
            
            if file_condition:
                # Create the destination folder, e.g., ".../SortedRawVideos/AO9_300Lux/"
                target_folder_name = f"{animal}_{file_condition}"
                target_dir_path = os.path.join(SORTED_VIDEOS_DIR, target_folder_name)
                os.makedirs(target_dir_path, exist_ok=True)
                
                # Copy the file to the correct sorted directory
                source_file_path = os.path.join(animal_source_path, filename)
                dest_file_path = os.path.join(target_dir_path, filename)

                if not os.path.exists(dest_file_path):
                    shutil.copy(source_file_path, dest_file_path)
                    print(f"  Copied {filename} to {target_folder_name}")
                else:
                    print(f"  Skipped (already exists): {filename}")

        except Exception as e:
            print(f"Could not process file {filename}. Error: {e}")

print("\n--- Video Sorting Complete! ---")